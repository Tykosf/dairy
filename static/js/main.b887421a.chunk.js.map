{"version":3,"sources":["components/Header/Header.jsx","components/Items/Item/Item.jsx","components/Items/Items.jsx","components/Comments/Comment/Comment.jsx","components/Comments/Comments.jsx","components/Board/Board.jsx","App.jsx","serviceWorker.js","index.js"],"names":["Header","props","Item","className","onClick","changeActive","title","amount","deleteItem","Items","type","placeholder","onChange","onChangeInputText","value","text","addItem","items","map","item","index","undefined","comments","key","active","bind","length","Comment","Comments","id","Fragment","_comment","name","rows","onKeyDown","addComment","onChangeCommentText","ref","commentRef","Board","componentCleanup","setState","inputText","commentText","localStorage","setItem","JSON","stringify","state","trim","activeItem","filter","_item","event","keyCode","ctrlKey","push","target","current","focus","React","createRef","this","parse","getItem","window","addEventListener","removeEventListener","Component","App","Boolean","location","hostname","match","ReactDOM","render","document","getElementById","navigator","serviceWorker","ready","then","registration","unregister"],"mappings":"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","file":"static/js/main.b887421a.chunk.js","sourcesContent":["import React from 'react';\r\nimport './header.css';\r\n\r\nconst Header = (props) => (\r\n\t<header>\r\n\t\t<h1>dairy app</h1>\r\n\t\t<p>Comment with no sense</p>\r\n\t</header>\r\n)\r\n\r\nexport default Header","import React from 'react';\r\nimport './item.css';\r\n\r\nconst Item = (props) => (\r\n\t<div className=\"item\">\r\n\t\t<div className=\"item__left\">\r\n\t\t\t<span onClick={props.changeActive}>{props.title}</span>\r\n\t\t\t<div className=\"amount\"><span>{props.amount}</span></div>\r\n\t\t</div>\r\n\t\t<button onClick={props.deleteItem}>Delete</button>\r\n\t</div>\r\n)\r\n\r\nexport default Item","import React from \"react\";\r\nimport Item from \"./Item/Item\";\r\nimport \"./items.css\";\r\n\r\nconst Items = (props) => {\r\n\treturn <div className=\"items\">\r\n\t\t\t<h3>Items</h3>\r\n\t\t\t<div className=\"items-add\">\r\n\t\t\t\t<input \r\n\t\t\t\t\ttype=\"text\"\r\n\t\t\t\t\tplaceholder=\"Type name here...\" \r\n\t\t\t\t\tonChange={props.onChangeInputText}\r\n\t\t\t\t\tvalue={props.text}\r\n\t\t\t\t/>\r\n\t\t\t\t<button onClick={props.addItem}>Add new</button>\r\n\t\t\t</div>\r\n\t\t\t<div className=\"items-list\">\r\n\t\t\t\t{props.items.map((item, index) => \r\n\t\t\t\t\titem.comments !== undefined ? \r\n\t\t\t\t\t<div className=\"item-container\" key={index}>\r\n\t\t\t\t\t\t{index === props.active && <div className=\"line\"/>}\r\n\t\t\t\t\t\t<Item \r\n\t\t\t\t\t\t\tkey={index}\r\n\t\t\t\t\t\t\tchangeActive={props.changeActive.bind(this, index)}\r\n\t\t\t\t\t\t\ttitle={item.text} \r\n\t\t\t\t\t\t\tamount={item.comments.length} \r\n\t\t\t\t\t\t\tdeleteItem={props.deleteItem.bind(this, index)}\t\t\r\n\t\t\t\t\t\t/>\r\n\t\t\t\t\t</div>\r\n\t\t\t\t\t: <></>\r\n\t\t\t\t)}\r\n\t\t\t</div>\t\t\r\n\t\t</div>\r\n}\r\n\r\nexport default Items","import React from 'react';\r\n\r\nconst Comment = (props) => (\r\n\t<div className=\"comment\">\r\n\t\t<div className=\"avatar\"/>\r\n\t\t<p>{props.text}</p>\r\n\t</div>\r\n)\r\n\r\nexport default Comment","import React from 'react';\r\nimport Comment from './Comment/Comment';\r\nimport './comments.css';\r\n\r\nconst Comments = (props) => (\r\n\t<div className=\"comments\">\r\n\t\t{!props.id ? <h2>No comments</h2> \r\n\t\t:\r\n\t\t<React.Fragment>\r\n\t\t\t<h2>Comments #{props.id}</h2>\r\n\t\t\t<div className=\"comments-list\">\r\n\t\t\t\t{props.comments && props.comments.map((_comment, index) =>\r\n\t\t\t\t\t<Comment key={index} text={_comment} />\r\n\t\t\t\t)}\r\n\t\t\t</div>\r\n\t\t\t<div className=\"comment-add\">\r\n\t\t\t\t<div className=\"avatar-choose\"/>\r\n\t\t\t\t<textarea \r\n\t\t\t\t\tname=\"comment\" \r\n\t\t\t\t\trows=\"3\" \r\n\t\t\t\t\tonKeyDown={props.addComment} \r\n\t\t\t\t\tonChange={props.onChangeCommentText}\r\n\t\t\t\t\tvalue={props.text}\r\n\t\t\t\t\tref={props.commentRef}\r\n\t\t\t\t/>\r\n\t\t\t</div>\r\n\t\t</React.Fragment>\r\n\t\t}\r\n\t</div>\r\n\t\t\r\n)\r\n\r\nexport default Comments","import React, { Component } from 'react';\r\nimport Items from '../Items/Items';\r\nimport Comments from '../Comments/Comments';\r\n\r\nclass Board extends Component {\r\n\tconstructor(props) {\r\n\t\tsuper(props);\r\n\t\tthis.state = {\r\n\t\t\titems: [], \r\n\t\t\tinputText: '',\r\n\t\t\tactive: -1,\r\n\t\t\tcommentText: ''\r\n\t\t};\r\n\t\tthis.commentRef = React.createRef();\r\n\t}\r\n\r\n\tcomponentDidMount() {\r\n\t\tif(this.state.items.length === 0) { \r\n\t\t\tthis.setState(JSON.parse(localStorage.getItem('currentState')));\r\n\t\t\twindow.addEventListener('beforeunload', this.componentCleanup);\r\n\t\t}\r\n\t}\r\n\r\n\tcomponentCleanup = () => {\r\n\t\tthis.setState({ inputText: '', commentText: '' }) \t\r\n\t\tlocalStorage.setItem('currentState', JSON.stringify(this.state));\r\n\t}\r\n\r\n\tcomponentWillUnmount() {\r\n\t\tthis.componentCleanup();\r\n\t\twindow.removeEventListener('beforeunload', this.componentCleanup);\r\n\t}\r\n\t\r\n\taddItem = () => {\r\n\t\tif(!this.state.inputText.trim().length) return;\r\n\t\tthis.setState({ \r\n\t\t\titems: [...this.state.items, { text: this.state.inputText, comments: [] }],\r\n\t\t\tinputText: ''\r\n\t\t});\r\n\t}\r\n\t\r\n\tdeleteItem = (id) => {\r\n\t\tconst activeItem = this.state.items.length-1 === this.state.active ? this.state.active-1 : this.state.active;\r\n\t\tthis.setState({ \r\n\t\t\titems: this.state.items.filter((_item,index) => index !== id),\r\n\t\t\tactive: activeItem\r\n\t\t})\r\n\t}\r\n\r\n\taddComment = (event) => {\r\n\t\tif(!this.state.commentText.trim().length) return;\r\n\t\tif ((event.keyCode === 10 || event.keyCode === 13) && event.ctrlKey) {\r\n\t\t\tthis.setState({ items: this.state.items.map((_item, index) => {\r\n\t\t\t\t\tif(index === this.state.active) \r\n\t\t\t\t\t\t_item.comments.push(this.state.commentText);\r\n\t\t\t\t\treturn _item;\r\n\t\t\t\t}),\r\n\t\t\t\tcommentText: ''\r\n\t\t\t})\r\n\t\t}\r\n\t}\r\n\r\n\tonChangeInputText = (event) => {\r\n\t\tthis.setState({ inputText: event.target.value });\r\n\t}\r\n\r\n\tonChangeCommentText = (event) => {\r\n\t\tthis.setState({ commentText: event.target.value });\r\n\t} \r\n\r\n\tchangeActive = (id) => {\r\n\t\tthis.setState({ active: id});\r\n\t\tthis.commentRef.current.focus();\r\n\t}\r\n\r\n\trender() {\r\n\t\tconst comments = this.state.items[this.state.active] !== undefined ? this.state.items[this.state.active].comments : [];\r\n\t\treturn (\r\n\t\t\t<React.Fragment>\r\n\t\t\t\t<Items \r\n\t\t\t\t\titems={this.state.items}\r\n\t\t\t\t\taddItem={this.addItem}\r\n\t\t\t\t\tdeleteItem={this.deleteItem}\r\n\t\t\t\t\tonChangeInputText={this.onChangeInputText}\r\n\t\t\t\t\tactive={this.state.active}\r\n\t\t\t\t\ttext={this.state.inputText}\r\n\t\t\t\t\tchangeActive={this.changeActive}\r\n\t\t\t\t/>\r\n\t\t\t\t<Comments \r\n\t\t\t\t\tid={this.state.active+1} \r\n\t\t\t\t\tcomments={comments}\r\n\t\t\t\t\taddComment={this.addComment}\r\n\t\t\t\t\tonChangeCommentText={this.onChangeCommentText}\r\n\t\t\t\t\ttext={this.state.commentText}\t\r\n\t\t\t\t\tcommentRef={this.commentRef}\r\n\t\t\t\t/>\r\n\t\t\t</React.Fragment>\r\n\t\t)\r\n\t} \r\n}\r\n\r\nexport default Board","import React from 'react';\nimport Header from './components/Header/Header';\nimport Board from './components/Board/Board';\nimport './App.css';\n\nconst App = () => {\n  return (\n    <div className=\"App\">\n      <Header />\n      <Board />\n    </div>\n  );\n}\n\nexport default App;\n","// This optional code is used to register a service worker.\n// register() is not called by default.\n\n// This lets the app load faster on subsequent visits in production, and gives\n// it offline capabilities. However, it also means that developers (and users)\n// will only see deployed updates on subsequent visits to a page, after all the\n// existing tabs open on the page have been closed, since previously cached\n// resources are updated in the background.\n\n// To learn more about the benefits of this model and instructions on how to\n// opt-in, read https://bit.ly/CRA-PWA\n\nconst isLocalhost = Boolean(\n  window.location.hostname === 'localhost' ||\n    // [::1] is the IPv6 localhost address.\n    window.location.hostname === '[::1]' ||\n    // 127.0.0.1/8 is considered localhost for IPv4.\n    window.location.hostname.match(\n      /^127(?:\\.(?:25[0-5]|2[0-4][0-9]|[01]?[0-9][0-9]?)){3}$/\n    )\n);\n\nexport function register(config) {\n  if (process.env.NODE_ENV === 'production' && 'serviceWorker' in navigator) {\n    // The URL constructor is available in all browsers that support SW.\n    const publicUrl = new URL(process.env.PUBLIC_URL, window.location.href);\n    if (publicUrl.origin !== window.location.origin) {\n      // Our service worker won't work if PUBLIC_URL is on a different origin\n      // from what our page is served on. This might happen if a CDN is used to\n      // serve assets; see https://github.com/facebook/create-react-app/issues/2374\n      return;\n    }\n\n    window.addEventListener('load', () => {\n      const swUrl = `${process.env.PUBLIC_URL}/service-worker.js`;\n\n      if (isLocalhost) {\n        // This is running on localhost. Let's check if a service worker still exists or not.\n        checkValidServiceWorker(swUrl, config);\n\n        // Add some additional logging to localhost, pointing developers to the\n        // service worker/PWA documentation.\n        navigator.serviceWorker.ready.then(() => {\n          console.log(\n            'This web app is being served cache-first by a service ' +\n              'worker. To learn more, visit https://bit.ly/CRA-PWA'\n          );\n        });\n      } else {\n        // Is not localhost. Just register service worker\n        registerValidSW(swUrl, config);\n      }\n    });\n  }\n}\n\nfunction registerValidSW(swUrl, config) {\n  navigator.serviceWorker\n    .register(swUrl)\n    .then(registration => {\n      registration.onupdatefound = () => {\n        const installingWorker = registration.installing;\n        if (installingWorker == null) {\n          return;\n        }\n        installingWorker.onstatechange = () => {\n          if (installingWorker.state === 'installed') {\n            if (navigator.serviceWorker.controller) {\n              // At this point, the updated precached content has been fetched,\n              // but the previous service worker will still serve the older\n              // content until all client tabs are closed.\n              console.log(\n                'New content is available and will be used when all ' +\n                  'tabs for this page are closed. See https://bit.ly/CRA-PWA.'\n              );\n\n              // Execute callback\n              if (config && config.onUpdate) {\n                config.onUpdate(registration);\n              }\n            } else {\n              // At this point, everything has been precached.\n              // It's the perfect time to display a\n              // \"Content is cached for offline use.\" message.\n              console.log('Content is cached for offline use.');\n\n              // Execute callback\n              if (config && config.onSuccess) {\n                config.onSuccess(registration);\n              }\n            }\n          }\n        };\n      };\n    })\n    .catch(error => {\n      console.error('Error during service worker registration:', error);\n    });\n}\n\nfunction checkValidServiceWorker(swUrl, config) {\n  // Check if the service worker can be found. If it can't reload the page.\n  fetch(swUrl)\n    .then(response => {\n      // Ensure service worker exists, and that we really are getting a JS file.\n      const contentType = response.headers.get('content-type');\n      if (\n        response.status === 404 ||\n        (contentType != null && contentType.indexOf('javascript') === -1)\n      ) {\n        // No service worker found. Probably a different app. Reload the page.\n        navigator.serviceWorker.ready.then(registration => {\n          registration.unregister().then(() => {\n            window.location.reload();\n          });\n        });\n      } else {\n        // Service worker found. Proceed as normal.\n        registerValidSW(swUrl, config);\n      }\n    })\n    .catch(() => {\n      console.log(\n        'No internet connection found. App is running in offline mode.'\n      );\n    });\n}\n\nexport function unregister() {\n  if ('serviceWorker' in navigator) {\n    navigator.serviceWorker.ready.then(registration => {\n      registration.unregister();\n    });\n  }\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport './index.css';\nimport App from './App';\nimport * as serviceWorker from './serviceWorker';\n\nReactDOM.render(<App />, document.getElementById('root'));\n\n// If you want your app to work offline and load faster, you can change\n// unregister() to register() below. Note this comes with some pitfalls.\n// Learn more about service workers: https://bit.ly/CRA-PWA\nserviceWorker.unregister();\n"],"sourceRoot":""}